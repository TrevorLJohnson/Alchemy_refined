{"mappings":"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","sources":["main.js"],"sourcesContent":["// frontend/main.js\r\n\r\n// UI elements\r\nconst newChatBtn        = document.getElementById('new-conversation-btn');\r\nconst conversationTitle = document.getElementById('conversation-title');\r\nconst sendBtn           = document.getElementById('send-btn');\r\nconst chatInput         = document.getElementById('user-input');\r\nconst chatHistory       = document.getElementById('chat-history');\r\nconst categorySections  = document.getElementById('category-sections');\r\nconst pieCtx            = document.getElementById('pie-canvas').getContext('2d');\r\n\r\n// Roman numerals helper\r\nfunction toRoman(num) {\r\n  const romans = [\r\n    '', 'I','II','III','IV','V','VI','VII','VIII','IX','X',\r\n    'XI','XII','XIII','XIV','XV','XVI','XVII','XVIII','XIX','XX'\r\n  ];\r\n  return romans[num] || num;\r\n}\r\n\r\n// Typewriter effect for titles\r\nasync function typeText(el, text, delay = 50) {\r\n  el.textContent = '';\r\n  for (let i = 0; i < text.length; i++) {\r\n    el.textContent += text[i];\r\n    await new Promise((r) => setTimeout(r, delay));\r\n  }\r\n}\r\n\r\n// Empty history storage\r\nlet historyEntries = [];\r\n\r\n// Chart.js setup with percent labels & animated entry\r\nChart.register(ChartDataLabels);\r\nconst pieChart = new Chart(pieCtx, {\r\n  type: 'pie',\r\n  data: {\r\n    labels: [],\r\n    datasets: [{\r\n      data: [],\r\n      backgroundColor: [\r\n        '#8884d8','#82ca9d','#ffc658','#0088FE','#FF8042',\r\n        '#FFBB28','#00C49F','#A28EF4','#F47CA2','#FF6633'\r\n      ]\r\n    }]\r\n  },\r\n  options: {\r\n    animation: {\r\n      animateRotate: true,\r\n      delay(ctx) {\r\n        // Stagger slice entry by index\r\n        return ctx.dataIndex * 300;\r\n      }\r\n    },\r\n    plugins: {\r\n      legend: { position: 'bottom', labels: { color: '#fff' } },\r\n      datalabels: {\r\n        color: '#fff',\r\n        formatter: (value, ctx) => {\r\n          const sum = ctx.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);\r\n          return sum ? `${Math.round((value / sum) * 100)}%` : '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n// New-chat handler: clear UI & reset state\r\nnewChatBtn.addEventListener('click', () => {\r\n  historyEntries = [];\r\n  chatHistory.innerHTML = '';\r\n  categorySections.innerHTML = '';\r\n  pieChart.data.labels = [];\r\n  pieChart.data.datasets[0].data = [];\r\n  pieChart.update();\r\n  typeText(conversationTitle, 'New Conversation', 30);\r\n});\r\n\r\n// Main send/receive logic\r\nasync function sendPrompt() {\r\n  const text = chatInput.value.trim();\r\n  if (!text) return;\r\n\r\n  // Render user bubble\r\n  const userBubble = document.createElement('div');\r\n  Object.assign(userBubble.style, {\r\n    alignSelf: 'flex-end',\r\n    background: '#6B46C1',\r\n    color: '#FFF',\r\n    padding: '0.5rem 1rem',\r\n    borderRadius: '1rem',\r\n    maxWidth: '60%'\r\n  });\r\n  userBubble.textContent = text;\r\n  chatHistory.appendChild(userBubble);\r\n\r\n  // API call\r\n  let json;\r\n  try {\r\n    const res = await fetch('http://localhost:5000/api/chat', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ text })\r\n    });\r\n    json = await res.json();\r\n    if (!res.ok) throw new Error(json.error);\r\n  } catch (err) {\r\n    alert('Error: ' + err.message);\r\n    return;\r\n  }\r\n\r\n  // Render assistant bubble\r\n  const aiBubble = document.createElement('div');\r\n  Object.assign(aiBubble.style, {\r\n    alignSelf: 'flex-start',\r\n    background: '#2D3748',\r\n    color: '#FFF',\r\n    padding: '0.5rem 1rem',\r\n    borderRadius: '1rem',\r\n    maxWidth: '60%'\r\n  });\r\n  aiBubble.textContent = json.reply;\r\n  chatHistory.appendChild(aiBubble);\r\n\r\n  // Normalize categories\r\n  const raw = Array.isArray(json.categories)\r\n    ? json.categories\r\n    : (json.categories?.current || []);\r\n  const cats = raw.map((c) => (\r\n    typeof c === 'string' ? { name: c, value: 1 } : { name: c.name, value: c.value }\r\n  ));\r\n\r\n  // Record in history\r\n  historyEntries.unshift({ timestamp: json.timestamp, cats, aiBubble });\r\n\r\n  // Generate conversation title on first message\r\n  if (historyEntries.length === 1) {\r\n    const combined = `${text}\\n\\n${json.reply}`;\r\n    // AI‐driven title request\r\n    try {\r\n      const titleRes = await fetch('http://localhost:5000/api/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          text: `Give a concise title for this conversation:\\n\\n${combined}`\r\n        })\r\n      });\r\n      const titleJson = await titleRes.json();\r\n      if (titleRes.ok) await typeText(conversationTitle, titleJson.reply, 40);\r\n    } catch {\r\n      conversationTitle.textContent = 'Conversation';\r\n    }\r\n  }\r\n\r\n  // Render historical category sections\r\n  categorySections.innerHTML = '';\r\n  historyEntries.forEach((entry, idx) => {\r\n    const sec = document.createElement('div');\r\n    sec.style.borderTop = idx > 0 ? '1px solid #4A5568' : 'none';\r\n    sec.style.padding = '0.5rem 0';\r\n    sec.style.cursor = 'pointer';\r\n\r\n    const hdr = document.createElement('h4');\r\n    hdr.textContent = `${toRoman(idx+1)}. ${entry.timestamp}`;\r\n    hdr.style.color = '#9F7AEA';\r\n    sec.appendChild(hdr);\r\n\r\n    const ul = document.createElement('ul');\r\n    ul.style.listStyle = 'disc';\r\n    ul.style.paddingLeft = '1.5rem';\r\n    ul.style.color = '#E2E8F0';\r\n    entry.cats.forEach(c => {\r\n      const li = document.createElement('li');\r\n      li.textContent = c.name;\r\n      ul.appendChild(li);\r\n    });\r\n    sec.appendChild(ul);\r\n\r\n    sec.addEventListener('click', () => {\r\n      // Update pie chart\r\n      pieChart.data.labels = entry.cats.map((c) => c.name);\r\n      pieChart.data.datasets[0].data = entry.cats.map((c) => c.value);\r\n      pieChart.update();\r\n      // Scroll chat into view\r\n      entry.aiBubble.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n    });\r\n\r\n    categorySections.appendChild(sec);\r\n  });\r\n\r\n  // Animate pie chart update\r\n  pieChart.data.labels = cats.map((c) => c.name);\r\n  pieChart.data.datasets[0].data = cats.map((c) => c.value);\r\n  pieChart.update();\r\n\r\n  // Clear input\r\n  chatInput.value = '';\r\n}\r\n\r\n// Wire interactions\r\nsendBtn.addEventListener('click', sendPrompt);\r\nchatInput.addEventListener('keydown', (e) => {\r\n  if (e.key === 'Enter') {\r\n    e.preventDefault();\r\n    sendPrompt();\r\n  }\r\n});\r\n"],"names":[],"version":3,"file":"frontend.c4775257.js.map","sourceRoot":"/__parcel_source_root/"}